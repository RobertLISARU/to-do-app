{"version":3,"sources":["todos.js","components/DeleteButton.js","components/Todo.js","components/TodosList.js","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["TODOS_URL","REQUEST_CONFIG","headers","getAll","axios","get","create","todo","post","update","oldTodo","newTodo","patch","url","remove","delete","DeleteButton","notifyChange","useState","snackbarOpen","setSnackbarOpen","handleClose","event","reason","IconButton","data-testid","id","onClick","Todos","then","aria-label","className","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","message","action","size","color","fontSize","Todo","Checkbox","inputProps","checked","completed","onChange","target","title","TodosList","todos","map","Header","newTodoTitle","setNewTodoTitle","placeholder","value","App","data","isLoading","setTodos","fetchTodos","a","response","useEffect","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ac38db61.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst TODOS_URL = \"https://todo-backend-hanami.herokuapp.com/\"\r\n\r\nconst REQUEST_CONFIG = {\r\n    headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n    }\r\n}\r\n\r\nfunction getAll() {\r\n    return axios.get(TODOS_URL, REQUEST_CONFIG)\r\n}\r\n\r\nfunction create(todo) {\r\n    return axios.post(TODOS_URL, todo, REQUEST_CONFIG)\r\n}\r\n\r\nfunction update(oldTodo, newTodo) {\r\n    return axios.patch(oldTodo.url, newTodo, REQUEST_CONFIG)\r\n}\r\n\r\nfunction remove(todo) {\r\n    return axios.delete(todo.url, REQUEST_CONFIG)\r\n}\r\n\r\nexport default { getAll, create, update, remove }\r\n","import DeleteIcon from '@material-ui/icons/Close'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\nimport Todos from './../todos'\r\nimport { useState, Fragment } from 'react'\r\n\r\nconst DeleteButton = ({ todo, notifyChange }) => {\r\n    const [snackbarOpen, setSnackbarOpen] = useState(false)\r\n\r\n    const handleClick = () => {\r\n        if (snackbarOpen) {\r\n            Todos.remove(todo).then(() => notifyChange())\r\n        } else {\r\n            setSnackbarOpen(true)\r\n        }\r\n    }\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return\r\n        }\r\n        setSnackbarOpen(false)\r\n    }\r\n\r\n    return <>\r\n        <IconButton\r\n            data-testid={`todo-delete-btn-${todo.id}`}\r\n            onClick={handleClick}\r\n            aria-label=\"delete\"\r\n            className='delete-btn'>\r\n            <DeleteIcon />\r\n        </IconButton>\r\n        <Snackbar\r\n            data-testid='delete-message-snackbar'\r\n            anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'center',\r\n            }}\r\n            open={snackbarOpen}\r\n            autoHideDuration={6000}\r\n            onClose={handleClose}\r\n            message='Tap again to delete'\r\n            action={\r\n                <Fragment>\r\n                    <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\r\n                        <DeleteIcon fontSize=\"small\" />\r\n                    </IconButton>\r\n                </Fragment>\r\n            }\r\n        />\r\n    </>\r\n}\r\n\r\nexport default DeleteButton\r\n","import Checkbox from '@material-ui/core/Checkbox'\r\nimport DeleteButton from './DeleteButton'\r\nimport Todos from './../todos'\r\n\r\nconst Todo = ({ todo, notifyChange }) => {\r\n    return (\r\n        <li>\r\n            <div className='todo-flex-container'>\r\n                <Checkbox\r\n                    className='todo-checkbox'\r\n                    inputProps={{ 'data-testid': 'todo-checkbox' }}\r\n                    checked={todo.completed}\r\n                    onChange={(event) => {\r\n                        Todos.update(todo,\r\n                            {\r\n                                \"completed\": event.target.checked\r\n                            }).then(() => notifyChange())\r\n                    }}\r\n                />\r\n                <div className='todo-label'\r\n                    data-testid=\"todo-label\">\r\n                    {todo.completed ? <s>{todo.title}</s> : todo.title}\r\n                </div>\r\n                <DeleteButton todo={todo} notifyChange={notifyChange} />\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Todo\r\n","import Todo from './Todo'\r\n\r\nconst TodosList = ({ todos, notifyChange }) => {\r\n\r\n    return <div className='todos-list-wrapper'>\r\n        <ul>\r\n            {todos.map((todo) =>\r\n                <Todo key={todo.id} todo={todo} notifyChange={notifyChange} />)}\r\n        </ul>\r\n    </div>\r\n}\r\n\r\nexport default TodosList\r\n","import { useState } from 'react'\r\nimport Todos from '../todos'\r\n\r\nconst Header = ({ notifyChange }) => {\r\n    const [newTodoTitle, setNewTodoTitle] = useState('')\r\n\r\n    const createTodo = () => {\r\n        Todos.create({ title: newTodoTitle }).then(() => {\r\n            setNewTodoTitle('')\r\n            notifyChange()\r\n        })\r\n    }\r\n\r\n    return (\r\n        <header className='header'>\r\n            <h1>Todos</h1>\r\n            <input\r\n                data-testid='new-todo-input'\r\n                placeholder='What needs to be done'\r\n                value={newTodoTitle}\r\n                onChange={(event) => {\r\n                    setNewTodoTitle(event.target.value)\r\n                }}\r\n            />\r\n            <span\r\n                className='add-btn'\r\n                data-testid='add-btn'\r\n                onClick={createTodo}>\r\n                Add\r\n            </span>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import './App.css'\r\nimport TodosList from './components/TodosList'\r\nimport Header from './components/Header'\r\nimport { useState, useEffect } from 'react'\r\nimport Todos from './todos'\r\n\r\nfunction App() {\r\n  const [todos, setTodos] = useState({ data: [], isLoading: true })\r\n\r\n  const fetchTodos = async () => {\r\n    const response = await Todos.getAll()\r\n    setTodos({ data: response.data, isLoading: false })\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchTodos()\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      {todos.isLoading ? <p>Fetching todos...</p> :\r\n        <>\r\n          <Header notifyChange={fetchTodos} />\r\n          <TodosList todos={todos.data} notifyChange={fetchTodos} />\r\n        </>\r\n      }\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport reportWebVitals from './reportWebVitals'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n"],"sourceRoot":""}